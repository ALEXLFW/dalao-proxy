#!/usr/bin/env node

const chalk = require('chalk');
const readline = require('readline');
const baseConfig = require('../config');

const register = require('../src/plugin').register;
const {
    program,
    ConfigParser,
    parserEmitter,
    printWelcome,
    usePlugins,
    commands: Commands,
} = require('../src');

printWelcome(baseConfig.version);


// On config parsed
parserEmitter.on('config:parsed', function (configObject) {
    const { path: configPath, config } = configObject;
    program.context.configPath = configPath;
    program.config = configPath;

    // trigger field `config`
    register._trigger('config', config, value => {
        program.context.config = value;

        if (config.debug) {
            console.log(chalk.yellow('> parsed user configuration'));
            console.log(program.context.config);
        }
    });
});

// Command: Start
program.use(Commands.start);

// Command: Init
program.use(Commands.init);

// Command: Add-plugin
program.use(Commands.addPlugin);

// Register commands from plugins
usePlugins(program, ConfigParser.parsePlugins());

// Command: *
program.use(function () {
    program
        .on('command:*', function () {
            program.outputHelp();
        })
        .on('--help', function () {
            console.log('')
            console.log('Examples:');
            console.log(chalk.grey('  $ dalao-proxy init'));
            console.log(chalk.grey('  $ dalao-proxy mock get'));
            console.log(chalk.grey('  $ dalao-proxy start -C ./my-config.json -p 1234 -wc'));
            console.log(chalk.grey('  $ dalao-proxy start -p 9090 -h test.dalao-proxy.com -wc'));
            console.log(chalk.grey('  $ dalao-proxy start --port=9090 --host=test.dalao-proxy.com --watch --cache=true'));
            console.log(chalk.grey('  $ dalao-proxy add-plugin @calvin_von/proxy-plugin-monitor'));
        });
});

// Parse command and options
program.parse(process.argv);

if (program.context.command) {
    // Start parsing config
    ConfigParser.parse(program.context.command);

    // Enable input
    if (program._enableInput) {
        const rl = readline.createInterface({
            input: process.stdin,
            output: process.stdout
        });
        // user runtime input listener
        rl.on('line', runtimeCmd => {
            register.emit('input', runtimeCmd);

            if (program.context.commandName === 'start') {
                if (/\b(restart|rs|reload)\b/.test(runtimeCmd)) {
                    console.clear();
                    console.log(chalk.green('\n> dalao is reloading...'));

                    program.context.server.close(function () {
                        ConfigParser.parse(program);
                    });
                }
            }
        });
    }
}
else {
    program.outputHelp();
    process.exit(1);
}



// process error caughtor
process.on('uncaughtException', function (err) {
    if (/(ECONNREFUSED|ECONNRESET)/i.test(err.message)) {
        console.log(chalk.red('\n> ðŸ˜«  Oops, dalao can\'t proxy to target'));
        console.error(err.message);
    }
    else {
        console.log(chalk.red('\n> ðŸ˜«  Oops, dalao can\'t handle this...'));
        console.error(err);
        console.log(chalk.yellow(`
    Current version: ${baseConfig.version}
    You may need to: 1.Update to the latest version by \`(sudo) npm i dalao-proxy@latest -g\`. 2.Look up your config file, check
    if there is any syntax problem(s). 3.Create a bug issue on https://github.com/CalvinVon/dalao-proxy/issues.
    dalao is sorry about this.`)
        );
    }
});